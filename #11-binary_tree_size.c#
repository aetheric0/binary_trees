#include "binary_trees.h"

/**
 * binary_tree_size - returns the size of a binary tree
 * @tree: the tree size to be determined
 * Return: size of tree or 0 if tree is NULL
 **/

size_t binary_tree_size(const binary_tree_t *tree)
{
	size_t height, left_depth, right_depth;

	if (tree == NULL)
		return (0);
	height = binary_tree_height(tree);
	left_depth = binary_tree_

	return (height - );
}

size_t binary_tree_height(const binary_tree_t *tree)
{
        size_t left_height = 0, right_height = 0;

        if (tree == NULL)
                return (0);
        if (tree->left == NULL && tree->right == NULL)
                return (0);
        left_height = binary_tree_height(tree->left);
        right_height = binary_tree_height(tree->right);

        return ((left_height > right_height) ?
                left_height + 1 : right_height + 1);
}
